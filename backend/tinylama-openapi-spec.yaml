# tinylama-openapi-spec.yaml
swagger: '2.0' # Using Swagger 2.0
info:
  title: TinyLlama Chat API
  description: API Gateway for TinyLlama Chatbot on Cloud Run
  version: '1.0.0'
schemes:
  - https
produces:
  - application/json
paths:
  /chat: # This is the public path your front-end will call
    post:
      summary: Proxy to TinyLlama chat backend
      operationId: chatProxy
      x-google-backend:
        address: https://tinylama-llm-backend-private-415000331801.us-east1.run.app # e.g., https://tinylama-llm-backend-private-xyz.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS # Appends /chat to the backend address
        jwt_audience: https://tinylama-llm-backend-private-415000331801.us-east1.run.app # Should be the same as address for Cloud Run
      consumes: # Specify request content type for Swagger 2.0
        - application/json
      parameters: # Define request body for Swagger 2.0
        - name: body
          in: body
          required: true
          description: Chat request payload
          schema:
            type: object
            required:
              - user_prompt
            properties:
              user_prompt:
                type: string
                example: "Hello, how are you?"
              conversation_history:
                type: array
                items:
                  type: object
                  properties:
                    role:
                      type: string
                      example: "user"
                    content:
                      type: string
                      example: "Previous message"
                example: [{"role": "user", "content": "Hi"}]
      responses:
        '200':
          description: A successful response
          schema:
            type: object # Define your expected response structure here
        # Add other responses like 400, 403, 500 etc.
      security:
        - api_key_security: [] # Reference the security scheme defined below
securityDefinitions: # Swagger 2.0 uses 'securityDefinitions'
  api_key_security: # Arbitrary name for the security scheme
    type: apiKey
    name: x-api-key # Standard header name for API keys
    in: header
